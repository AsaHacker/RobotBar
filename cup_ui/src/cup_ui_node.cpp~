#include "ros/ros.h"
#include "kduino/KduinoImu.h"

class CupUi
{
public:
  CupUi(ros::NodeHandle nh, ros::NodeHandle nh_private)
 :nh_(nh), nh_private_(nh_private)
  {
    cup_ui_pub_ = nh_.advertise<cup_ui::CupUi>("cup_ui",2);
    imu_sub_= nh_.subscribe("kduino/imu", 1, &CupUi::kduinoImuCallback, this, ros::TransportHints().tcpNoDelay());
  }
    ~CupUi(){};
        
  

  private:
  ros::NodeHandle nh_;
  ros::NodeHandle nh_private_;
  ros::Subscriber imu_sub_;
  ros::Publisher cup_ui_pub_;

void kduinoImuCallback(const kduino::KduinoImuConstr &msg)
{
  
}

}

int main(int argc, char **argv)
{
  ros::init(argc, argv, "cup_ui");
  ros::NodeHandle nh;
  ros::NodeHandle nh_private("~");
  CupUi*  cupUiNode = new CupUi(nh, nh_private);
  ros::spin ();
  delete CupUiNode;


}
